{"version":3,"file":"index.js","sources":["../../src/typeMessage.js","../../src/outgoingMessages.js","../../src/incomingMessages.js","../../src/yesNoMessages.js","../../src/sendFormContainer.js","../../src/mainContainer.js","../../src/mainContent.js","../../src/login.js","../../src/App.js","../../src/providerComponent.js","../../src/index.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass TypeMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: ''\n    };\n  }\n\n    handleChange=(event) => {\n      this.setState({ content: event.target.value });\n    }\n\n    handleSubmit=(event) => {\n      event.preventDefault();\n      if (this.props.allMessages.length === 0 && this.state.content !== '' && (this.state.content === 'yes' || this.state.content === 'Yes' || this.state.content === 'YES' || this.state.content === 'no' || this.state.content === 'No' || this.state.content === 'NO')) {\n        console.log('tıklandı');\n        this.props.nextQuestion(this.state);\n        this.setState({ content: '' });\n      } else if (this.state.content !== '' && this.props.allMessages.length !== 0) {\n        this.props.addMessage(this.state);\n        this.setState({ content: '' });\n      }\n    }\n\n    render() {\n      return (\n        <div className=\"type_msg\">\n          <div className=\"input_msg_write\">\n            <input\n              type=\"text\" className=\"write_msg\" value={this.state.content}\n              onChange={this.handleChange} placeholder={this.props.message}\n            />\n            <button className=\"msg_send_btn\" onClick={this.handleSubmit} type=\"button\"><i\n              className=\"fa fa-paper-plane-o\"\n              aria-hidden=\"true\"\n            />\n            </button>\n\n          </div>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = state => ({\n  formId: state.formId,\n  apiKey: state.apiKey,\n  saveFormQuestions: state.saveFormQuestions,\n  count: state.count,\n  allMessages: state.allMessages\n});\n\nexport default connect(mapStateToProps)(TypeMessage);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nexport const OutgoingMessages = ({ question }) => {\n  if (question.type === 'control_datetime') {\n    return (\n      <div className=\"outgoing_msg\" key={question.order}>\n        <div className=\"outgoing_msg_img\">\n          <img src=\"jot_pencil.png\" alt=\"pencil\" />\n        </div>\n        <div className=\"sent_msg\">\n          <p>\n            {`${question.text} Format: ${question.format}`}\n          </p>\n          <span className=\"time_date\"> 11:01 AM | June 9</span>\n        </div>\n      </div>\n    );\n  } else if (question.type === 'control_dropdown') {\n    const divideOptions = question.options.split('|');\n    return (\n      <div className=\"outgoing_msg\" key={question.order}>\n        <div className=\"outgoing_msg_img\">\n          <img src=\"jot_pencil.png\" alt=\"pencil\" />\n        </div>\n        <div className=\"sent_msg\">\n          <p key={question.order}>\n            {question.text}<br />\n            {divideOptions.map((item) => {\n                                return (<p className=\"options_P\" key={item}>Type {divideOptions.indexOf(item)} for: {item}</p>);\n                            })}\n          </p>\n          <span className=\"time_date\"> 11:01 AM | June 9</span>\n        </div>\n      </div>\n    );\n  } else if (question.type === 'control_radio') {\n    const divideOptions = question.options.split('|');\n    return (\n      <div className=\"outgoing_msg\" key={question.order}>\n        <div className=\"outgoing_msg_img\">\n          <img src=\"jot_pencil.png\" alt=\"pencil\" />\n        </div>\n        <div className=\"sent_msg\">\n          <p key={question.order}>\n            {question.text}<br />\n            {divideOptions.map((item) => {\n                                return (<p className=\"options_P\" key={item}>Type {divideOptions.indexOf(item)} for: {item}</p>);\n                            })}\n          </p>\n          <span className=\"time_date\"> 11:01 AM | June 9</span>\n        </div>\n      </div>\n    );\n  } else if (question.type === 'control_checkbox') {\n    const divideOptions = question.options.split('|');\n    return (\n      <div className=\"outgoing_msg\" key={question.order}>\n        <div className=\"outgoing_msg_img\">\n          <img src=\"jot_pencil.png\" alt=\"pencil\" />\n        </div>\n        <div className=\"sent_msg\">\n          <p key={question.order}>\n            {question.text}<br />\n            {divideOptions.map((item) => {\n                                return (<p className=\"options_P\" key={item}>Type {divideOptions.indexOf(item)} for: {item}</p>);\n                            })}\n          </p>\n          <span className=\"time_date\"> 11:01 AM | June 9</span>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"outgoing_msg\" key={question.order}>\n      <div className=\"outgoing_msg_img\">\n        <img src=\"jot_pencil.png\" alt=\"pencil\" />\n      </div>\n      <div className=\"sent_msg\">\n        <p>\n          {question.text}\n\n          {/* <input type=\"button\"value=\"Yes\"/>\n                            <input type=\"button\"value=\"No\"/> */}\n        </p>\n        <span className=\"time_date\"> 11:01 AM | June 9</span>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\n// eslint-disable-next-line react/prop-types\nexport const IncomingMessages = ({ messages }) => (\n  <div className=\"incoming_msg\" key={messages.order}>\n    <div className=\"incoming_msg_img\"> <img\n      src=\"userSend.png\"\n      alt=\"sunil\"\n    />\n    </div>\n    <div className=\"received_msg\">\n      <div className=\"received_withd_msg\">\n        <p>{messages.message}</p>\n\n        <span className=\"time_date\"> 11:01 AM | June 9</span>\n\n      </div>\n    </div>\n  </div>\n);\n","/* eslint-disable no-else-return */\n/* eslint-disable react/jsx-closing-bracket-location */\nimport React from 'react';\n\n// eslint-disable-next-line react/prop-types\nexport const YesNoMessages = ({ messages }) => {\n  if (messages.toUpperCase() === 'YES') {\n    return (\n      <div className=\"incoming_msg\">\n        <div className=\"incoming_msg_img\"> <img\n          src=\"userSend.png\"\n          alt=\"sunil\"\n        />\n        </div>\n        <div className=\"received_msg\">\n          <div className=\"received_withd_msg\">\n            <p>{messages}</p>\n\n            <span className=\"time_date\"> 11:01 AM | June 9</span>\n\n          </div>\n        </div>\n      </div>\n    );\n  } else if (messages.toUpperCase() === 'NO') {\n    return (\n      <div>\n        <div className=\"incoming_msg\">\n          <div className=\"incoming_msg_img\"> <img\n            src=\"userSend.png\"\n            alt=\"sunil\"\n                    />\n          </div>\n          <div className=\"received_msg\">\n            <div className=\"received_withd_msg\">\n              <p>{messages}</p>\n\n              <span className=\"time_date\"> 11:01 AM | June 9</span>\n\n            </div>\n          </div>\n        </div>\n        <div className=\"outgoing_msg\" >\n          <div className=\"outgoing_msg_img\">\n            <img src=\"jot_pencil.png\" alt=\"pencil\" />\n          </div>\n          <div className=\"sent_msg\">\n            <p>\n                Thank you for your answer. Please refresh the page to fullfill the form.\n            </p>\n            <span className=\"time_date\"> 11:01 AM | June 9</span>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return '';\n  }\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-useless-constructor */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// eslint-disable-next-line react/prop-types\nclass SendFormContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n    handleSendForm=() => {\n      this.props.sendForm();\n    }\n    render() {\n      if (this.props.saveFormQuestions.length === this.props.count) {\n        return (\n          <div className=\"sendForm\">\n            <input type=\"button\" value=\"Send Form\" onClick={this.handleSendForm} />\n          </div>\n        );\n      }\n      return '';\n    }\n}\n\nconst mapStateToProps = state => ({\n  formId: state.formId,\n  apiKey: state.apiKey,\n  saveFormQuestions: state.saveFormQuestions,\n  count: state.count,\n  allMessages: state.allMessages,\n  username: state.username,\n  yesNoMessage: state.yesNoMessage\n});\nexport default connect(mapStateToProps)(SendFormContainer);\n","/* eslint-disable no-else-return */\n/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable radix */\n/* eslint-disable complexity */\n/* eslint-disable max-statements */\n/* eslint-disable no-undef */\n/* eslint-disable react/prop-types */\n/* eslint-disable import/first */\nimport React, { Component } from 'react';\nimport TypeMessage from './typeMessage';\nimport { OutgoingMessages } from './outgoingMessages';\nimport { IncomingMessages } from './incomingMessages';\nimport { connect } from 'react-redux';\nimport { YesNoMessages } from './yesNoMessages';\nimport SendFormContainer from './sendFormContainer';\n\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.heightRef = React.createRef();\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.addMessage = this.addMessage.bind(this);\n  }\n\n// Next Question is shown in the screen\nupdateCount=() => {\n  return this.props.dispatch({ type: 'UPDATE_COUNT_IN_NEXT_QUES', comingCount: this.props.count });\n}\nsaveMessageDispatch=() => {\n  return this.props.dispatch({ type: 'SAVE_MESSAGE', nexFormQuestion: this.props.saveFormQuestions[this.props.count] });\n}\nwriteYes=(message) => {\n  // eslint-disable-next-line prefer-const\n  let contentMessage = message.content;\n  return this.props.dispatch({ type: 'YESNO_MESSAGE', yesOrNoMessage: contentMessage });\n}\n\nasync nextQuestion(message) {\n  await this.writeYes(message);\n  await this.updateCount();\n  await this.saveMessageDispatch();\n}\n// Next Question is shown in the screen\n\nscrollToBottom=() => {\n  this.heightRef.current.scrollTop = this.heightRef.current.scrollHeight;\n}\n\n\n// Text added to question's message properties\nupdateQuestionMessage=(message) => {\n  const contentMessage = message.content;\n  console.log('message in updateQuestionMessage', contentMessage);\n  return this.props.dispatch({ type: 'UPDATE_QUESTIONS_MESSAGE', message: contentMessage });\n}\n\nsaveMessageOfAddMessage=() => {\n  return this.props.dispatch({ type: 'SAVE_MESSAGE', nexFormQuestion: this.props.saveFormQuestions[this.props.count] });\n}\n\nasync addMessage(message) {\n  console.log('message in addMessage Func', message);\n  //     //Firstly message is added into related question field's message field\n  await this.updateQuestionMessage(message);\n  if (this.props.count < this.props.saveFormQuestions.length) {\n    await this.saveMessageOfAddMessage();\n  } else {\n    console.log('soru bitti');\n  }\n\n  // Next question is added into allMessages redux store\n  this.scrollToBottom();\n}\n// Text added to question's message properties\n\nsendForm=() => {\n  var submitMessage = {};\n  for (var i = 0; i < this.props.allMessages.length; i++) {\n    if (this.props.allMessages[i].type === 'control_email') {\n      const { qid } = this.props.allMessages[i];\n      // submissions[qid]=this.props.allMessages[i].message;\n      const { message } = this.props.allMessages[i];\n      // '3': { first: 'berkay', last: 'test' },\n      submitMessage[qid] = message;\n    } else if (this.props.allMessages[i].type === 'control_fullname') {\n      const { qid } = this.props.allMessages[i];\n      const divideFullname = this.props.allMessages[i].message.split(' ');\n      submitMessage[qid] = { first: divideFullname[0], last: divideFullname[1] };\n    } else if (this.props.allMessages[i].type === 'control_dropdown') {\n      const { qid } = this.props.allMessages[i];\n      for (var l = 0; l < this.props.saveFormQuestions.length; l++) {\n        if (this.props.allMessages[i].order === this.props.saveFormQuestions[l].order) {\n          // Divide options according to |\n          const divideOptions = this.props.saveFormQuestions[l].options.split('|');\n          console.log('gelen divide optionssss', divideOptions, `gelen all Messages option${this.props.allMessages[i].message}`);\n          for (var k = 0; k < divideOptions.length; k++) {\n            if (divideOptions.indexOf(divideOptions[k]) === parseInt(this.props.allMessages[i].message)) {\n              console.log(`eşiti yakaladım sen ${divideOptions[k]}seçmişsin`, `allmessages message${this.props.allMessages[i].message}`);\n              // send selected options into submitMessage to send jotform\n              submitMessage[qid] = divideOptions[k];\n            } else {\n              console.log(`eşiti yakalayamadım${this.props.allMessages[i].message}`);\n            }\n          }\n        }\n      }\n    } else if (this.props.allMessages[i].type === 'control_radio') {\n      const { qid } = this.props.allMessages[i];\n      for (var m = 0; m < this.props.saveFormQuestions.length; m++) {\n        if (this.props.allMessages[i].order === this.props.saveFormQuestions[m].order) {\n          // Divide options according to |\n          const divideOptions = this.props.saveFormQuestions[m].options.split('|');\n          console.log('gelen divide optionssss', divideOptions, `gelen all Messages option${this.props.allMessages[i].message}`);\n          for (var n = 0; n < divideOptions.length; n++) {\n            if (divideOptions.indexOf(divideOptions[n]) === parseInt(this.props.allMessages[i].message)) {\n              console.log(`eşiti yakaladım sen ${divideOptions[n]}seçmişsin`, `allmessages message${this.props.allMessages[i].message}`);\n              // send selected options into submitMessage to send jotform\n              submitMessage[qid] = divideOptions[n];\n            } else {\n              console.log(`eşiti yakalayamadım${this.props.allMessages[i].message}`);\n            }\n          }\n        }\n      }\n    } else if (this.props.allMessages[i].type === 'control_textarea') {\n      const { qid } = this.props.allMessages[i];\n\n      const { message } = this.props.allMessages[i];\n      submitMessage[qid] = message;\n    } else if (this.props.allMessages[i].type === 'control_datetime') {\n      const { qid } = this.props.allMessages[i];\n\n      // Divide datetime according to -\n      const divideOptions = this.props.allMessages[i].message.split('-');\n\n      // send selected options into submitMessage to send jotform\n      submitMessage[qid] = { month: divideOptions[0], day: divideOptions[1], year: divideOptions[2] };\n    } else if (this.props.allMessages[i].type === 'control_checkbox') {\n      const { qid } = this.props.allMessages[i];\n      // Divide datetime according to -\n      const divideMessageOptions = this.props.allMessages[i].message.split(',');\n      const sendCheckBoxArray = [];\n\n      for (var y = 0; y < this.props.saveFormQuestions.length; y++) {\n        if (this.props.allMessages[i].order === this.props.saveFormQuestions[y].order) {\n          // Divide options according to |\n          const divideOptions = this.props.saveFormQuestions[y].options.split('|');\n          console.log('gelen multiple Checkbox options', divideOptions, `gelen all Messages option${this.props.allMessages[i].message}`);\n          for (var z = 0; z < divideOptions.length; z++) {\n            for (var t = 0; t < divideOptions.length; t++) {\n              if (divideOptions.indexOf(divideOptions[z]) === parseInt(divideMessageOptions[t])) {\n                sendCheckBoxArray.push(divideOptions[z]);\n                console.log(`eşleşen multiple checkboxlar${divideOptions[z]}`);\n              } else {\n                console.log('multiple checkbox eşleşmedi');\n              }\n            }\n            submitMessage[qid] = sendCheckBoxArray;\n          }\n        }\n      }\n    }\n  }\n  const xhr = new XMLHttpRequest();\n  console.log(submitMessage);\n  xhr.open('POST', `https://api.jotform.com/form/${this.props.formId}/submissions?apiKey=${this.props.apiKey}`);\n  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n  xhr.send(JSON.stringify(submitMessage));\n}\n\n\nrender() {\n  return (\n    <div className=\"mainContainer\">\n      <h3 className=\"text-center\">Jotform ChatBot</h3>\n      <div className=\"messaging\" >\n        <div className=\"inbox_msg\" >\n          <div className=\"mesgs\" >\n            <div className=\"msg_history\" ref={this.heightRef}>\n              <div className=\"outgoing_msg\">\n                <div className=\"outgoing_msg_img\">\n                  <img src=\"jot_pencil.png\" alt=\"pencil\" />\n                </div>\n                <div className=\"sent_msg\">\n                  <p>\n                    Hello {this.props.username.toUpperCase()}. Welcome to JotForm Chatbot\n                  </p>\n                  <span className=\"time_date\"> 11:01 AM | June 9</span>\n                </div>\n              </div>\n              <div className=\"outgoing_msg\">\n                <div className=\"outgoing_msg_img\">\n                  <img src=\"jot_pencil.png\" alt=\"pencil\" />\n                </div>\n                <div className=\"sent_msg\">\n                  <p>\n                      Would you like to fullfill the form?  YES OR NO ?\n\n                  </p>\n                  <span className=\"time_date\"> 11:01 AM | June 9</span>\n                </div>\n              </div>\n              {/* outgoing messages */\n                <YesNoMessages messages={this.props.yesNoMessage} />\n                }\n              {\n\n                this.props.allMessages.map((item) => {\n                  if (this.props.yesNoMessage.toUpperCase() === 'NO') {\n                    return '';\n                  } else {\n                    if (item.message === '') {\n                        return <OutgoingMessages question={item} />;\n                    } else if (item.message !== '') {\n                    return [\n                      <OutgoingMessages question={item} />,\n                      <IncomingMessages messages={item} />\n                        ];\n                    }\n                        return this.warning();\n                  }\n                })\n\n              }\n              <SendFormContainer sendForm={this.sendForm} />\n\n            </div>\n\n            {/* Type message into text field */ }\n            <TypeMessage\n              message=\"sendSomething\" warning={this.warning} addMessage={this.addMessage}\n              nextQuestion={this.nextQuestion}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\nconst mapStateToProps = state => ({\n  formId: state.formId,\n  apiKey: state.apiKey,\n  saveFormQuestions: state.saveFormQuestions,\n  count: state.count,\n  allMessages: state.allMessages,\n  username: state.username,\n  yesNoMessage: state.yesNoMessage\n});\nexport default connect(mapStateToProps)(MainContainer);\n","import React, { Component } from 'react';\nimport MainContainer from './mainContainer';\n\n\nclass MainContent extends Component {\n  render() {\n    return (\n      <MainContainer />\n    );\n  }\n}\n\n\nexport default MainContent;\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n\nclass Login extends React.Component {\n  componentDidMount() {\n    // Api key has been initialied\n    // eslint-disable-next-line react/prop-types\n    const { apiKey } = this.props;\n    window.JF.initialize({ apiKey: apiKey });\n    var x = this;\n\n\n    // Form questions are saved into redux store\n    window.JF.getFormQuestions(this.props.formId, (response) => {\n      Object.entries(response).map(([key, value], i) => {\n        value.message = '';\n        return x.props.dispatch({ type: 'SAVE_FORM_QUESTIONS', formQuestion: value });\n      });\n\n      console.log('props save form questions', x.props.saveFormQuestions);\n    }, (error) => {\n      console.log(error);\n    });\n\n    window.JF.getUser((response) => {\n      return x.props.dispatch({ type: 'SAVE_USERNAME', getUsername: response.username });\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"initializeForm\" />\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  formId: state.formId,\n  apiKey: state.apiKey,\n  saveFormQuestions: state.saveFormQuestions\n});\n\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport './App.css';\nimport MainContent from './mainContent';\nimport Login from './login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n      <MainContent />\n    </div>\n  );\n}\n\n\nexport default (App);\n","/* eslint-disable import/first */\nimport React, { Component } from 'react';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport update from 'immutability-helper';\nimport { Provider } from 'react-redux';\n\nclass ProviderComponent extends Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n\n  // eslint-disable-next-line react/prop-types\n  reducer = (state = this.props.initialState, action) => {\n    switch (action.type) {\n      case 'SAVE_MESSAGE':\n        return {\n          ...state,\n          allMessages: [...state.allMessages, action.nexFormQuestion]\n\n        };\n      case 'YESNO_MESSAGE':\n        return {\n          ...state,\n          yesNoMessage: action.yesOrNoMessage\n        };\n      case 'SAVE_FORM_QUESTIONS':\n        return {\n          ...state,\n          saveFormQuestions: [...state.saveFormQuestions, action.formQuestion]\n        };\n      case 'UPDATE_QUESTIONS_MESSAGE':\n        const allMessagesLastIndex = state.allMessages.indexOf(state.allMessages[state.allMessages.length - 1]);\n        return update(state, {\n          allMessages: {\n            [allMessagesLastIndex]: {\n              message: { $set: action.message }\n            }\n          },\n          count: {\n            $set: state.count + 1\n          }\n\n        });\n      case 'SAVE_USERNAME':\n        return {\n          ...state,\n          username: action.getUsername\n        };\n      case 'UPDATE_COUNT_IN_NEXT_QUES':\n        return update(state, {\n          count: {\n            $set: action.comingCount + 2\n          }\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  render() {\n    const store = createStore(this.reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n    return (\n      <div>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default ProviderComponent;\n\n","/* eslint-disable import/first */\nimport React from 'react';\n// import ReactDOM from 'react-dom'; //\n// import './index.css';\n// import * as serviceWorker from './serviceWorker'; //\nimport ProviderComponent from './providerComponent';\n\nconst initialState = {\n  formId: '92112257961961',\n  apiKey: '7fcefff03d226f77300b4f82a5311166',\n  allMessages: [],\n  saveFormQuestions: [],\n  count: 0,\n  username: '',\n  yesNoMessage: ''\n};\n\nclass JotChat extends React.Component {\n  render() {\n    return (\n      <ProviderComponent initialState={initialState} />\n    );\n  }\n}\nexport default JotChat;\n\n// ReactDOM.render(\n//   <ProviderComponent initialState={initialState} />\n//   , document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register(); //\n"],"names":["TypeMessage","props","event","setState","content","target","value","preventDefault","allMessages","length","state","console","log","nextQuestion","addMessage","React","handleChange","message","handleSubmit","Component","mapStateToProps","formId","apiKey","saveFormQuestions","count","connect","OutgoingMessages","question","type","order","text","format","divideOptions","options","split","map","item","indexOf","IncomingMessages","messages","YesNoMessages","toUpperCase","SendFormContainer","sendForm","handleSendForm","username","yesNoMessage","MainContainer","dispatch","comingCount","nexFormQuestion","contentMessage","yesOrNoMessage","heightRef","current","scrollTop","scrollHeight","submitMessage","i","qid","divideFullname","first","last","l","k","parseInt","m","n","month","day","year","divideMessageOptions","sendCheckBoxArray","y","z","t","push","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","createRef","bind","writeYes","updateCount","saveMessageDispatch","updateQuestionMessage","saveMessageOfAddMessage","scrollToBottom","warning","MainContent","Login","window","JF","initialize","x","getFormQuestions","response","Object","entries","key","formQuestion","error","getUser","getUsername","App","ProviderComponent","initialState","action","allMessagesLastIndex","update","$set","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","Provider","JotChat"],"mappings":"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"}